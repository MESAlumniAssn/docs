{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction The MES College Alumni Association \u00ae Greetings and welcome to the documentation site for mesalumniassociation.com . Before diving deep into technical details, please read further to understand the objectives and goals of the project from an operational and a technology standpoint. Goals Keep the operational costs low Continuous Documentation Keeping the costs low The primary consideration while determining the current website/API architecture was the overall cost. Most pages on the website built for the initial launch are static. The registration/post-registration pages are few exceptions since they connect to a data store. As a result, the website, the database and the backend API are all deployed on a basic virtual private server (VPS) with 1GB of RAM and a 25GB SSD disk. The VPS owned by DigitalOcean , resides in their BLR data centre. The association has been made aware that as the scope of the website increases, the infrastructure will need to be scaled up. Keeping costs in mind, the project uses free/basic tiers of various external cloud based services. For CI/CD, the project uses the free tier of Travis CI Images are served from the free tier of ImageKit For emails, the project is using the Essentials 40K paln from SendGrid Github is the repository for the source code At the moment, the free tier's will suffice. However, if at any time, the scope of the project is deemed to go beyond the allowed limit of any of the free tier's, it needs to be brought to the attention of the association so that an appropriate decision can be taken. Continuous Documentation Presently, the association does not have a dedicated technical team for this project. All technical tasks (including this documentation) have been carried out by an alumni. Until there is a dedicated team, upcoming work will most likely be assigned to other interested alumni or freelancers. It is therefore imperative that any new or changing features are accurately documented so that there is a smooth handover to new project personnel. Technology Stack Frontend Backend Database Other Tools and Services","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#goals","text":"Keep the operational costs low Continuous Documentation","title":"Goals"},{"location":"#keeping-the-costs-low","text":"The primary consideration while determining the current website/API architecture was the overall cost. Most pages on the website built for the initial launch are static. The registration/post-registration pages are few exceptions since they connect to a data store. As a result, the website, the database and the backend API are all deployed on a basic virtual private server (VPS) with 1GB of RAM and a 25GB SSD disk. The VPS owned by DigitalOcean , resides in their BLR data centre. The association has been made aware that as the scope of the website increases, the infrastructure will need to be scaled up. Keeping costs in mind, the project uses free/basic tiers of various external cloud based services. For CI/CD, the project uses the free tier of Travis CI Images are served from the free tier of ImageKit For emails, the project is using the Essentials 40K paln from SendGrid Github is the repository for the source code At the moment, the free tier's will suffice. However, if at any time, the scope of the project is deemed to go beyond the allowed limit of any of the free tier's, it needs to be brought to the attention of the association so that an appropriate decision can be taken.","title":"Keeping the costs low"},{"location":"#continuous-documentation","text":"Presently, the association does not have a dedicated technical team for this project. All technical tasks (including this documentation) have been carried out by an alumni. Until there is a dedicated team, upcoming work will most likely be assigned to other interested alumni or freelancers. It is therefore imperative that any new or changing features are accurately documented so that there is a smooth handover to new project personnel.","title":"Continuous Documentation"},{"location":"#technology-stack","text":"","title":"Technology Stack"},{"location":"#frontend","text":"","title":"Frontend"},{"location":"#backend","text":"","title":"Backend"},{"location":"#database","text":"","title":"Database"},{"location":"#other-tools-and-services","text":"","title":"Other Tools and Services"},{"location":"architecture/","text":"Application Architecture The website sits behind Cloudflare which acts as the content delivery network (CDN). We are using the free tier of the CDN as the current iteration of the website does not warrant an upgrade to a paid tier. The CDN largely helps in improving the performance by serving the website from Cloudflare's 200 plus PoP's (points of presence). It also serves as a caching layer for static assets. We use a single DigitalOcean droplet running Ubuntu 20.04 LTS which hosts the website, the backend api and the database. The website is developed in Next.js . The backend api endpoints, built with FastAPI talk to a PostgreSQL database. ImageKit.io is our image store. In addition to storing images, we also use ImageKit's transformations while fetching images. All payments are processed via Razorpay 's api and emails to end users/the association are sent from SendGrid . Editing the architecture diagram The diagram was created with draw.io . To edit the image, open the architecture.drawio.png file included in the docs repository on the draw.io website or download the Draw.io Integration plugin for VS Code and open the file in the VS Code editor itself. The architecture diagram is stored in the Docs directory on the project's ImageKit.io account.","title":"Application Architecture"},{"location":"architecture/#application-architecture","text":"The website sits behind Cloudflare which acts as the content delivery network (CDN). We are using the free tier of the CDN as the current iteration of the website does not warrant an upgrade to a paid tier. The CDN largely helps in improving the performance by serving the website from Cloudflare's 200 plus PoP's (points of presence). It also serves as a caching layer for static assets. We use a single DigitalOcean droplet running Ubuntu 20.04 LTS which hosts the website, the backend api and the database. The website is developed in Next.js . The backend api endpoints, built with FastAPI talk to a PostgreSQL database. ImageKit.io is our image store. In addition to storing images, we also use ImageKit's transformations while fetching images. All payments are processed via Razorpay 's api and emails to end users/the association are sent from SendGrid .","title":"Application Architecture"},{"location":"architecture/#editing-the-architecture-diagram","text":"The diagram was created with draw.io . To edit the image, open the architecture.drawio.png file included in the docs repository on the draw.io website or download the Draw.io Integration plugin for VS Code and open the file in the VS Code editor itself. The architecture diagram is stored in the Docs directory on the project's ImageKit.io account.","title":"Editing the architecture diagram"}]}